# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

variables:
  nugetVersion: "1.1.2"  
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    finalVersion: $(nugetVersion)
  ${{ else }}:
    finalVersion: "$(nugetVersion)-preview"
pool:
  vmImage: ubuntu-latest
stages:
- stage: Stage_A
  jobs:
  - job: Job_A
    steps:
    - checkout: self
      fetchDepth: 0
    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
    - task: gitversion/setup@0
      displayName: Install GitVersion
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      inputs:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'
        
    - task: DotNetCoreCLI@2
      displayName: 'Pack project'
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        configuration: 'Release'
        packDirectory: '$(Build.ArtifactStagingDirectory)/nuget'
        versioningScheme: byEnvVar
        versionEnvVar: finalVersion
    - task: NuGetCommand@2
      displayName: 'Publish nuget'
      inputs:
        command: 'push'
        allowPackageConflicts: true
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'ClubNatacion/Default/@Prerelease'
  - job: Job_B
    dependsOn: Job_A
    steps:
      - script: env | sort